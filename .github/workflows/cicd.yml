name: CI/CD Pipeline

on: [push]

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create .env file
        run: cp .env.example .env

      - name: Start Docker Compose services (first attempt)
        run: docker compose -f docker-compose.yml up -d

      - name: Retry Docker Compose up to ensure all services are up
        run: docker compose -f docker-compose.yml up -d

      - name: Wait until all services are running
        run: |
          expected_count=6
          timeout=180
          interval=5
          elapsed=0

          echo "Waiting for $expected_count services to be running..."

          while true; do
            running_count=$(docker compose ps --services --filter 'status=running' | wc -l)

            if [ "$running_count" -eq "$expected_count" ]; then
              echo "All $expected_count services are running"
              break
            fi

            echo "Currently running: $running_count/$expected_count"
            sleep "$interval"
            elapsed=$((elapsed + interval))

            if [ "$elapsed" -ge "$timeout" ]; then
              echo "Timeout reached. These services are not running:"
              comm -13 <(sort <<<"$(docker compose ps --services --filter 'status=running')") <(sort <<<"$(docker compose ps --services)")
              exit 1
            fi
          done

      - name: Install Laravel dependencies
        run: docker compose exec workspace composer install

      - name: Run Migrations and Seeding
        run: |
          docker compose exec workspace bash
          php artisan db:drop-users-table
          php artisan migrate:fresh --seed

      - name: Generate Application Key
        run: docker compose exec workspace php artisan key:generate

      - name: Run tests with coverage and generate reports
        run: php artisan test --coverage-clover=build/coverage-clover.xml --log-junit build/junit-report.xml

      - name: Archive test results and code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-and-code-coverage-report
          path: build/*
