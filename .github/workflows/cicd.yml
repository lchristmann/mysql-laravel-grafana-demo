name: CI/CD Pipeline

on: [push]

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create .env file
        run: cp .env.example .env

      - name: Build Docker Compose services and stop them again (it doesn't work on first attempt)
        run: |
          docker compose -f cicd.docker-compose.yml up -d || true
          docker compose -f cicd.docker-compose.yml down

      - name: Start MySQL
        run: |
          docker compose -f cicd.docker-compose.yml up -d mysql
          sleep 10  # Give MySQL time to initialize

      - name: Start PHP-FPM
        run: |
          docker compose -f cicd.docker-compose.yml up -d php-fpm
          sleep 5  # Wait for PHP-FPM to connect to DB

      - name: Start Workspace
        run: |
          docker compose -f cicd.docker-compose.yml up -d workspace
          sleep 5

      - name: Start Web
        run: |
          docker compose -f cicd.docker-compose.yml up -d web
          sleep 5

      - name: Show running containers (should be 4)
        run: docker compose ps

      - name: Install Laravel dependencies
        run: docker compose -f cicd.docker-compose.yml exec workspace composer install

      - name: Run Migrations and Seeding
        run: |
          docker compose -f cicd.docker-compose.yml exec workspace bash
          php artisan db:drop-users-table
          php artisan migrate:fresh --seed

      - name: Generate Application Key
        run: docker compose -f cicd.docker-compose.yml exec workspace php artisan key:generate

      - name: Run tests with coverage and generate reports
        run: docker compose -f cicd.docker-compose.yml exec workspace php artisan test --coverage-clover=build/coverage-clover.xml --log-junit build/junit-report.xml

      - name: Archive test results and code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-and-code-coverage-report
          path: build/*
